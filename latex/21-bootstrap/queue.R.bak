############################################
#ONE-SERVER QUEUEING SYSTEM
#
#No customer arrivals after time T
#
#All customers will be serviced
#
# array Q stores the arrival times of customers waiting in queue
############################################
 set.seed(1235); T=10;  n.system=0;  Q=NULL; delay=NULL
 t.arrival=rexp(1,12) #FIRST ARRIVAL EVENT-TIME
 t.eos=Inf #NO EOS EVENT PENDING
 clock=min(t.arrival, t.eos)  #TURN THE CLOCK
 #######################################################
 while (clock < T) #clock IS THE CURRENT EVENT TIME
 {
   if (clock == t.arrival) #THIS EVENT IS AN ARRIVAL EVENT
     {
       # SCHEDULE NEXT ARRIVAL
       t.arrival=clock+rexp(1,12)
       if (t.arrival > T) t.arrival=Inf# STOP SCHEDULING ARRIVALS
       #####################################################
       # HANDLE THIS ARRIVAL
       n.system=n.system+1 #UPDATE SYSTEM STATE
       if (n.system == 1) #START SERVICE AND SCHEDULE HIS EOS
         { delay=c(delay,0) #COLLECT HIS DELAY
           t.eos=clock+rgamma(1,2,40) #SCHEDULE HIS EOS
         }
        else       
           Q=c(Q, clock) #STORE ARRIVAL TIME OF THIS ARRIVAL 
     }
   else #THIS EVENT IS AN EOS EVENT
     {
       n.system=n.system-1 #UPDATE SYSTEM STATE
      #SEE IF SERVER CAN TAKE A BREAK
       if (length(Q) > 0) #DRAW 1ST CUSTOMER FROM QUEUE AND SCHEDULE HIS EOS EVENT
         {
           delay=c(delay,clock-Q[1]) #COLLECT DELAY OF 1ST CUSTOMER IN QUEUE
           Q=Q[-1] #DRAW 1ST CUSTOMER FROM Q
           t.eos=clock+rgamma(1,2,40) #SCHEDULE ITS EOS
         }
       else #SET SERVER IDLE
         t.eos=Inf
     }
   clock=min(t.arrival, t.eos)  #TURN THE CLOCK
 }
 #####################################################################
 #####################################################################
 #clock > T
 if (clock == Inf) #BOTH t.arrival, t.eos ARE Inf
   T.p=0  else  #clock=t.eos > T
   {
    while (length(Q) > 0)
    {
     delay=c(delay,clock-Q[1]) #COLLECT DELAY
     Q=Q[-1] #DRAW 1ST CUSTOMER FROM QUEUE
     t.eos=clock+rgamma(1,2,40) #SCHEDULE ITS EOS
     clock=t.eos  #TURN THE CLOCK
    }
    T.p=clock-T
   }
######
mean(delay); length(delay); T.p
